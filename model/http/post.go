package http

import (
	"github.com/yebology/giggle-backend/constant/post"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

// Post represents the structure of a post in the application.
type Post struct {

	// Id is the unique identifier for the post, automatically generated by MongoDB.
	Id primitive.ObjectID `json:"id" bson:"_id,omitempty"`

	// PostCreatorId is the unique identifier of the user who created the post.
	PostCreatorId primitive.ObjectID `json:"postCreatorId" bson:"_postCreatorId"`

	// PostImageHash is a hash or reference to the post's image.
	// The `validate:"required"` tag ensures that this field must be provided.
	PostImageHash string `json:"postImageHash" validate:"required"`

	// PostCategory is the category of the post.
	// The `validate:"required,validPostCategory"` tag ensures it must be provided and belong to valid predefined categories.
	PostCategory string `json:"postCategory" validate:"required,validPostCategory"`

	// PostName is the title or name of the post.
	// The `validate:"required,min=8,max=255"` tag ensures it must be provided and its length should be between 8 and 255 characters.
	PostName string `json:"postName" validate:"required,min=8,max=255"`

	// PostDescription provides additional details about the post.
	// The `validate:"required,min=8,max=1024"` tag ensures it must be provided and its length should be between 8 and 1024 characters.
	PostDescription string `json:"postDescription" validate:"required,min=8,max=1024"`

	// PostPrice specifies the price associated with the post.
	// The `validate:"required"` tag ensures it must be provided.
	PostPrice float64 `json:"postPrice" validate:"required"`

	// RequiredTalent specifies the number of talents needed for the post.
	// This field is optional, as denoted by `omitempty`.
	RequiredTalent uint64 `json:"requiredTalent,omitempty"`

	// PostType specifies the type of the post.
	// The `validate:"required,validPostType"` tag ensures it must be provided and belong to valid predefined post types.
	PostType post.Type `json:"postType" validate:"required,validPostType"`

	// PostStatus specifies the current status of the post.
	// The `validate:"required,validPostStatus"` tag ensures it must be provided and belong to valid predefined post statuses.
	PostStatus post.Status `json:"postStatus" validate:"required,validPostStatus"`
	
}
